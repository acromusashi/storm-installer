#!/bin/bash
#
### BEGIN INIT INFO
# Provides: $storm-ui
### END INIT INFO

# Source function library.
. /etc/init.d/functions
RETVAL=0

STORM_USER=root
PID_FILE="/var/run/storm-ui.pid"

STORM_HOME="/opt/storm"
LIB="$STORM_HOME/lib"
STORM_JAR=($STORM_HOME/storm-*.jar)
STORM_CONF="$STORM_HOME/conf"
STORM_LOG="$STORM_HOME/log4j"

CLASSPATH="$LIB/*:$STORM_JAR:$STORM_CONF:$STORM_LOG:$STORM_HOME"

JVM_TYPE="server"
UI_JVM_MEMORY="1024m"
UI_JVM_OPTS=""

# Source config
. /etc/sysconfig/storm

start() {
    if storm_status $PID_FILE; then
	echo "Storm ui is already running."
	exit 1
    else
	echo "Starting storm ui..."
    fi 
    STORM_CMD="java -$JVM_TYPE -Xmx$UI_JVM_MEMORY -Djava.library.path=\"$JAVA_LIBRARY_PATH\" -Dstorm.options=\"$STORM_OPTIONS\" -Dstorm.home=\"$STORM_HOME\" -Dlogfile.name=ui.log $UI_JVM_OPTS -cp \"$CLASSPATH\" backtype.storm.ui.core &"
    daemon "$STORM_CMD > /dev/null && echo \$! > $PID_FILE"
    RETVAL=$?
    print_storm_status $PID_FILE
    return $RETVAL
}

stop() {
    if storm_status $PID_FILE; then
        echo "Stopping storm ui..."
    else
        echo "Storm ui is not running."
	exit 1
    fi
    killproc -p $PID_FILE -TERM
    print_storm_status $PID_FILE
    return $?
}

storm_check_pid() {
    local pid=$1
    ps -fp $pid | grep $pid | grep ui > /dev/null 2>&1
}

storm_status() {
    local pidfile="$1" # IN
    local pid=`cat "$pidfile" 2>/dev/null`
    if [ "$pid" = '' ]; then
    # The file probably does not exist or is empty. 
        return 1
    fi

    set -- $pid
    pid="$1"

    storm_check_pid $pid
}

print_storm_status() {
    if storm_status $PID_FILE; then
        echo "Storm ui is running."	
    else
	echo "Storm ui is stopped."
     fi
}

restart() {
        stop
        start
}

reload()  {
    restart
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
  	print_storm_status		 
        ;;
  restart)
        restart
        ;;
  reload)
        reload
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 2
esac

exit $?
