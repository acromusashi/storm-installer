#!/bin/bash
#
### BEGIN INIT INFO
# Provides: $storm-ui
# Default-Start: 3 4 5
# Default-Stop: 0 1 6
### END INIT INFO

# Source function library.
. /etc/init.d/functions
RETVAL=0

STORM_USER=root
PID_FILE="/var/run/storm-ui.pid"

STORM_HOME="/opt/storm"
LIB="$STORM_HOME/lib"
STORM_JAR=($STORM_HOME/storm-*.jar)
STORM_CONF="$STORM_HOME/conf"
STORM_LOG="$STORM_HOME/log4j"

CLASSPATH="$LIB/*:$STORM_JAR:$STORM_CONF:$STORM_LOG:$STORM_HOME"

JVM_TYPE="server"
UI_JVM_MEMORY="1024m"
UI_JVM_OPTS=""

# Source config
. /etc/sysconfig/storm

start() {
    if storm_status>/dev/null; then
    	echo "Storm ui is already running."
    	exit 1
    else
    	echo "Starting storm ui..."
    fi 
    STORM_CMD="java -$JVM_TYPE -Xmx$UI_JVM_MEMORY -Djava.library.path=\"$JAVA_LIBRARY_PATH\" -Dstorm.options=\"$STORM_OPTIONS\" -Dstorm.home=\"$STORM_HOME\" -Dlogfile.name=ui.log $UI_JVM_OPTS -cp \"$CLASSPATH\" backtype.storm.ui.core &"
    daemon "$STORM_CMD > /dev/null && echo \$! > $PID_FILE"
    RETVAL=$?
    storm_status
    return $RETVAL
}

stop() {
    if storm_status>/dev/null; then
        echo "Stopping storm ui..."
    else
        echo "Storm ui is not running."
        return 1
    fi
    killproc -p $PID_FILE -TERM
    storm_status
    return $?
}

storm_status() {
    status -p $PID_FILE storm-ui
    return $?
}

restart() {
        stop
        start
}

reload()  {
    restart
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        storm_status		 
        ;;
  restart)
        restart
        ;;
  reload)
        reload
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 2
esac

exit $?
